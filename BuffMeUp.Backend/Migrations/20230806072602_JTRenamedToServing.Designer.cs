// <auto-generated />
using System;
using BuffMeUp.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuffMeUp.Backend.Migrations
{
    [DbContext(typeof(BuffMeUpDbContext))]
    [Migration("20230806072602_JTRenamedToServing")]
    partial class JTRenamedToServing
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Auth.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Auth.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PersonalStatsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("PersonalStatsId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1"),
                            Email = "admin@admin.admin",
                            FirstName = "Admin",
                            PasswordHash = "sAPw/jPsL8b4YBDGD/ol+A==;5fMzUvN1Scua7hPVXv4g69iNRoQ8dfj15terG0Hx2+c=",
                            RoleId = 2,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Food.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Carbs")
                        .HasColumnType("int");

                    b.Property<int>("Fats")
                        .HasColumnType("int");

                    b.Property<bool>("IsGlobal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Carbs = 1,
                            Fats = 10,
                            IsGlobal = true,
                            Name = "Eggs",
                            Protein = 12,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 2,
                            Carbs = 0,
                            Fats = 4,
                            IsGlobal = true,
                            Name = "Chicken breast",
                            Protein = 31,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 3,
                            Carbs = 0,
                            Fats = 13,
                            IsGlobal = true,
                            Name = "Salmon",
                            Protein = 20,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 4,
                            Carbs = 0,
                            Fats = 20,
                            IsGlobal = true,
                            Name = "Ground beef",
                            Protein = 26,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 5,
                            Carbs = 0,
                            Fats = 1,
                            IsGlobal = true,
                            Name = "Tuna",
                            Protein = 30,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 6,
                            Carbs = 0,
                            Fats = 21,
                            IsGlobal = true,
                            Name = "Pork chops",
                            Protein = 25,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 7,
                            Carbs = 4,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Greek yogurt",
                            Protein = 10,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 8,
                            Carbs = 4,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Cottage cheese",
                            Protein = 11,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 9,
                            Carbs = 7,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Broccoli",
                            Protein = 2,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 10,
                            Carbs = 20,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Sweet potato",
                            Protein = 2,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 11,
                            Carbs = 24,
                            Fats = 1,
                            IsGlobal = true,
                            Name = "Brown rice",
                            Protein = 3,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 12,
                            Carbs = 22,
                            Fats = 50,
                            IsGlobal = true,
                            Name = "Almonds",
                            Protein = 21,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 13,
                            Carbs = 16,
                            Fats = 49,
                            IsGlobal = true,
                            Name = "Peanuts",
                            Protein = 25,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 14,
                            Carbs = 9,
                            Fats = 15,
                            IsGlobal = true,
                            Name = "Avocado",
                            Protein = 2,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 15,
                            Carbs = 23,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Banana",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 16,
                            Carbs = 15,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Apple",
                            Protein = 0,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 17,
                            Carbs = 4,
                            Fats = 3,
                            IsGlobal = true,
                            Name = "Beef liver",
                            Protein = 20,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 18,
                            Carbs = 20,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Lentils",
                            Protein = 9,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 19,
                            Carbs = 27,
                            Fats = 3,
                            IsGlobal = true,
                            Name = "Chickpeas",
                            Protein = 9,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 20,
                            Carbs = 21,
                            Fats = 2,
                            IsGlobal = true,
                            Name = "Quinoa",
                            Protein = 4,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 21,
                            Carbs = 12,
                            Fats = 1,
                            IsGlobal = true,
                            Name = "Oatmeal",
                            Protein = 3,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 22,
                            Carbs = 20,
                            Fats = 50,
                            IsGlobal = true,
                            Name = "Peanut butter",
                            Protein = 25,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 23,
                            Carbs = 30,
                            Fats = 44,
                            IsGlobal = true,
                            Name = "Cashews",
                            Protein = 18,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 24,
                            Carbs = 4,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Spinach",
                            Protein = 3,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 25,
                            Carbs = 11,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Carrots",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 26,
                            Carbs = 4,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Tomatoes",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 27,
                            Carbs = 28,
                            Fats = 1,
                            IsGlobal = true,
                            Name = "White rice",
                            Protein = 3,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 28,
                            Carbs = 50,
                            Fats = 5,
                            IsGlobal = true,
                            Name = "Bread",
                            Protein = 5,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 29,
                            Carbs = 35,
                            Fats = 2,
                            IsGlobal = true,
                            Name = "Pasta",
                            Protein = 7,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 30,
                            Carbs = 12,
                            Fats = 3,
                            IsGlobal = true,
                            Name = "Milk",
                            Protein = 8,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 31,
                            Carbs = 1,
                            Fats = 20,
                            IsGlobal = true,
                            Name = "Cheese",
                            Protein = 10,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 32,
                            Carbs = 4,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Cucumber",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 33,
                            Carbs = 50,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Mango",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 34,
                            Carbs = 50,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Pineapple",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 35,
                            Carbs = 8,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Strawberries",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 36,
                            Carbs = 14,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Blueberries",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 37,
                            Carbs = 12,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Oranges",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 38,
                            Carbs = 16,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Grapes",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 39,
                            Carbs = 8,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Watermelon",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 40,
                            Carbs = 82,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Honey",
                            Protein = 0,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 41,
                            Carbs = 68,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Maple syrup",
                            Protein = 0,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 42,
                            Carbs = 45,
                            Fats = 30,
                            IsGlobal = true,
                            Name = "Chocolate",
                            Protein = 5,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 43,
                            Carbs = 5,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Cauliflower",
                            Protein = 2,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 44,
                            Carbs = 3,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Asparagus",
                            Protein = 2,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 45,
                            Carbs = 4,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Zucchini",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = 46,
                            Carbs = 3,
                            Fats = 0,
                            IsGlobal = true,
                            Name = "Celery",
                            Protein = 1,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        });
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Food.Meal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Food.Serving", b =>
                {
                    b.Property<Guid>("MealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.Property<int>("Grams")
                        .HasColumnType("int");

                    b.HasKey("MealId", "FoodItemId");

                    b.HasIndex("FoodItemId");

                    b.ToTable("Serving");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.PersonalStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CurrentWeight")
                        .HasColumnType("int");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<int>("GoalWeight")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("StartingWeight")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PersonalStats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36d33f78-dcba-46a7-955c-13e0cc73ec97"),
                            Age = 22,
                            CurrentWeight = 70,
                            Gender = true,
                            GoalWeight = 75,
                            Height = 175,
                            StartingWeight = 70,
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        });
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Workouts.ExerciseSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExerciseTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseTemplateId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("ExerciseSets");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Workouts.ExerciseTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ExerciseType")
                        .HasColumnType("int");

                    b.Property<bool>("IsGlobal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExerciseTemplates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52839922-3f79-4ace-bec0-91775cc79a3e"),
                            Description = "Lie on your back on a flat bench. Grip the bar with your hands slightly wider than shoulder-width apart. Lift the bar off the rack and position it above your chest with arms fully extended.",
                            ExerciseType = 1,
                            IsGlobal = true,
                            Name = "Bench Press",
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = new Guid("882c93e9-d7aa-4b4c-ab66-69524c530048"),
                            Description = "Stand with your mid-foot under the barbell. Bend over and grab the bar with a shoulder-width grip. Bend your knees until your shins touch the bar. Lift your chest up and straighten your lower back.",
                            ExerciseType = 0,
                            IsGlobal = true,
                            Name = "Deadlift",
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = new Guid("a0516f9d-5e24-44e6-86a7-a00b9cb45edf"),
                            Description = "Stand with your mid-foot under the barbell. Bend over and grab the bar with a shoulder-width grip. Bend your knees until your shins touch the bar. Lift your chest up and straighten your lower back.",
                            ExerciseType = 2,
                            IsGlobal = true,
                            Name = "Squat",
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = new Guid("d38aaf6e-8c04-409d-9399-650b2fed8ced"),
                            Description = "Stand with the bar on your front shoulders, and your hands next to your shoulders. Press the bar over your head, until it’s balanced over your shoulders and mid-foot.",
                            ExerciseType = 3,
                            IsGlobal = true,
                            Name = "Overhead Press",
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = new Guid("74e43796-43c8-45a1-933c-4b07d32c89ad"),
                            Description = "Grab the pull-up bar with your palms down (shoulder-width grip). Hang to the pull-up bar with straight arms and your legs off the floor. Pull yourself up by pulling your elbows down to the floor.",
                            ExerciseType = 0,
                            IsGlobal = true,
                            Name = "Pull-up",
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = new Guid("7c8fec8e-a7e9-41d5-9211-83258a06b99e"),
                            Description = "Stand up with your torso upright while holding a dumbbell on each hand being held at arms length. The elbows should be close to the torso. This will be your starting position.",
                            ExerciseType = 5,
                            IsGlobal = true,
                            Name = "Dumbbell Curl",
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = new Guid("9b717acd-32af-4408-9a7e-4f0a7d8f486f"),
                            Description = "Attach a straight or angled bar to a high pulley and grab with an overhand grip at shoulder width. Standing upright with the torso straight and a very small inclination forward, bring the upper arms close to your body and perpendicular to the floor.",
                            ExerciseType = 4,
                            IsGlobal = true,
                            Name = "Triceps Pushdown",
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        },
                        new
                        {
                            Id = new Guid("65a375af-d8ac-426e-9d70-e783a946c7fa"),
                            Description = "Lie on your back on the floor. Bend your legs and place feet firmly on the ground to stabilize your lower body. Cross your hands to opposite shoulders or place them behind your ears, without pulling on your neck.",
                            ExerciseType = 6,
                            IsGlobal = true,
                            Name = "Sit-up",
                            UserId = new Guid("41fc7ca7-c54c-4e7b-a68a-033f054b56d1")
                        });
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Workouts.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Auth.User", b =>
                {
                    b.HasOne("BuffMeUp.Backend.Data.Models.PersonalStats", "PersonalStats")
                        .WithMany()
                        .HasForeignKey("PersonalStatsId");

                    b.HasOne("BuffMeUp.Backend.Data.Models.Auth.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalStats");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Food.FoodItem", b =>
                {
                    b.HasOne("BuffMeUp.Backend.Data.Models.Auth.User", "User")
                        .WithMany("FoodItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Food.Meal", b =>
                {
                    b.HasOne("BuffMeUp.Backend.Data.Models.Auth.User", "User")
                        .WithMany("Meals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Food.Serving", b =>
                {
                    b.HasOne("BuffMeUp.Backend.Data.Models.Food.FoodItem", "FoodItem")
                        .WithMany("Servings")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuffMeUp.Backend.Data.Models.Food.Meal", "Meal")
                        .WithMany("Servings")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.PersonalStats", b =>
                {
                    b.HasOne("BuffMeUp.Backend.Data.Models.Auth.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Workouts.ExerciseSet", b =>
                {
                    b.HasOne("BuffMeUp.Backend.Data.Models.Workouts.ExerciseTemplate", "ExerciseTemplate")
                        .WithMany()
                        .HasForeignKey("ExerciseTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuffMeUp.Backend.Data.Models.Workouts.Workout", "Workout")
                        .WithMany("ExerciseSets")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseTemplate");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Workouts.ExerciseTemplate", b =>
                {
                    b.HasOne("BuffMeUp.Backend.Data.Models.Auth.User", "User")
                        .WithMany("ExerciseTemplates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Workouts.Workout", b =>
                {
                    b.HasOne("BuffMeUp.Backend.Data.Models.Auth.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Auth.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Auth.User", b =>
                {
                    b.Navigation("ExerciseTemplates");

                    b.Navigation("FoodItems");

                    b.Navigation("Meals");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Food.FoodItem", b =>
                {
                    b.Navigation("Servings");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Food.Meal", b =>
                {
                    b.Navigation("Servings");
                });

            modelBuilder.Entity("BuffMeUp.Backend.Data.Models.Workouts.Workout", b =>
                {
                    b.Navigation("ExerciseSets");
                });
#pragma warning restore 612, 618
        }
    }
}
